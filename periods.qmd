---
title: "Period Analysis"
format:
  html:
    code-fold: true
    code-tools: true
---

# Fact-Checking Soviet Growth Claims

## Motivation

This analysis was prompted by a specific claim made in the book "GROWTH CRYSTAL. FOR THE RUSSIAN ECONOMIC MIRACLE" ([presentation in English](https://crystalbook.ru/wp-content/uploads/2021/05/growth-crystal-ENG.pdf)). On the second slide of their presentation, the authors claim that the USSR achieved an extraordinary GDP growth rate of 13.8% per year during the period 1929-1955, excluding the World War II years (1941-1945).

The authors state that their calculations are based on the Maddison Project Database, which is a highly respected source for historical GDP data. This claim, if true, would suggest that the Soviet Union achieved one of the highest sustained growth rates in economic history.

### Our Approach

To verify this claim, we:

1. Used the same Maddison Project Database (2018 version)
2. Calculated growth rates for the specific period mentioned (1929-1955, excluding 1941-1945)
3. Extended the analysis to other periods for context
4. Analyzed both GDP per capita and total GDP to ensure comprehensive understanding

## Results Summary

Our analysis reveals that:

1. The actual GDP growth rate for 1929-1955 (excluding WWII) was approximately 4.3% per year, not 13.8% as claimed
2. This growth rate, while significant, is less than one-third of what was claimed in the "GROWTH CRYSTAL" book
3. The discrepancy raises important questions about the methodology used in the book's calculations

Below are the detailed calculations and visualizations that support these findings.

## GDP Per Capita

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Read the Excel file
df = pd.read_excel("mpd2018.xlsx", sheet_name="Full data")

# Filter for Former USSR
ussr_data = df[df['country'] == 'Former USSR'].copy()

# Sort by year
ussr_data = ussr_data.sort_values('year')

# Remove data before 1884
ussr_data = ussr_data[ussr_data['year'] >= 1884]
```

```{python}
#| fig-cap: "Average GDP Per Capita Growth Rate by Period"
# Calculate GDP (using population and GDP per capita)
ussr_data['gdppc_growth'] = ussr_data['rgdpnapc'].pct_change(fill_method=None) * 100

# Define periods
periods = [
    (1885, 1913, "Pre-Revolutionary\n(1885-1913)"),
    (1914, 1920, "WWI & Civil War\n(1914-1920)"),
    (1921, 1928, "NEP Period\n(1921-1928)"),
    (1929, 1941, "Early Soviet\n(1929-1941)"),
    # (1941, 1945, "WWII\n(1941-1945)"),
    (1945, 1955, "Post-War Recovery\n(1945-1955)"),
    (1956, 1991, "Late Soviet\n(1956-1991)"),
    (1992, 1998, "Post-Soviet Crisis\n(1992-1998)"),
    (1999, 2019, "Recovery & Growth\n(1999-2019)")
]

# Calculate average growth for each period
period_averages = []
for start_year, end_year, period_name in periods:
    mask = (ussr_data['year'] >= start_year) & (ussr_data['year'] <= end_year)
    avg_growth = ussr_data.loc[mask, 'gdppc_growth'].mean()
    std_growth = ussr_data.loc[mask, 'gdppc_growth'].std()
    n_years = mask.sum()
    period_averages.append({
        'period': period_name,
        'avg_growth': avg_growth,
        'std_growth': std_growth,
        'n_years': n_years,
        'start_year': start_year,
        'end_year': end_year
    })

# Calculate special periods (1929-1955)
mask_1929_1955 = (ussr_data['year'] >= 1929) & (ussr_data['year'] <= 1955)
avg_1929_1955 = ussr_data.loc[mask_1929_1955, 'gdppc_growth'].mean()
std_1929_1955 = ussr_data.loc[mask_1929_1955, 'gdppc_growth'].std()

# Calculate 1929-1955 without 1941-1945
mask_without_war = (
    ((ussr_data['year'] >= 1929) & (ussr_data['year'] < 1941)) |
    ((ussr_data['year'] > 1945) & (ussr_data['year'] <= 1955))
)
avg_1929_1955_no_war = ussr_data.loc[mask_without_war, 'gdppc_growth'].mean()
std_1929_1955_no_war = ussr_data.loc[mask_without_war, 'gdppc_growth'].std()

# Add special periods to the list
# period_averages.append({
#     'period': '1929-1955\n(including WWII)',
#     'avg_growth': avg_1929_1955,
#     'std_growth': std_1929_1955,
#     'n_years': mask_1929_1955.sum(),
#     'start_year': 1929,
#     'end_year': 1955
# })
period_averages.append({
    'period': '1929-1955\n(excluding WWII)',
    'avg_growth': avg_1929_1955_no_war,
    'std_growth': std_1929_1955_no_war,
    'n_years': mask_without_war.sum(),
    'start_year': 1929,
    'end_year': 1955
})

# Create DataFrame for plotting
df_plot = pd.DataFrame(period_averages)

# Create the bar plot with error bars
plt.figure()
bars = plt.bar(df_plot['period'], df_plot['avg_growth'],
               yerr=df_plot['std_growth'], capsize=5)

# Customize the plot
plt.title('Average GDP Per Capita Growth Rate by Period (%)', pad=20)
plt.xlabel('Period')
plt.ylabel('Average Growth Rate (%)')
plt.grid(True, axis='y', linestyle='--', alpha=0.7)
plt.xticks(rotation=45, ha='right')

# Add value labels on top of each bar
for bar in bars:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2., height,
             f'{height:.1f}%',
             ha='center', va='bottom')

plt.tight_layout()
plt.show()
```

```{python}
#| output: asis
from tabulate import tabulate

# Create a table with the statistics
stats_df = pd.DataFrame(period_averages)
stats_df = stats_df[['period', 'avg_growth', 'std_growth', 'n_years']]
stats_df.columns = ['Period', 'Average Growth (%)', 'Std Dev (%)', 'Years']

# Convert the DataFrame to a markdown table
markdown_table = tabulate(stats_df.round(2), headers='keys', tablefmt='pipe', showindex=False)
print(markdown_table)
```

## Total GDP

```{python}
#| fig-cap: "Average GDP Growth Rate by Period"
# Calculate GDP (using population and GDP per capita)
ussr_data['total_gdp'] = ussr_data['rgdpnapc'] * ussr_data['pop'] * 1000  # pop is in thousands
ussr_data['gdp_growth'] = ussr_data['total_gdp'].pct_change(fill_method=None) * 100

# Calculate average growth for each period
period_averages = []
for start_year, end_year, period_name in periods:
    mask = (ussr_data['year'] >= start_year) & (ussr_data['year'] <= end_year)
    avg_growth = ussr_data.loc[mask, 'gdp_growth'].mean()
    std_growth = ussr_data.loc[mask, 'gdp_growth'].std()
    n_years = mask.sum()
    period_averages.append({
        'period': period_name,
        'avg_growth': avg_growth,
        'std_growth': std_growth,
        'n_years': n_years,
        'start_year': start_year,
        'end_year': end_year
    })

# Calculate special periods (1929-1955)
mask_1929_1955 = (ussr_data['year'] >= 1929) & (ussr_data['year'] <= 1955)
avg_1929_1955 = ussr_data.loc[mask_1929_1955, 'gdp_growth'].mean()
std_1929_1955 = ussr_data.loc[mask_1929_1955, 'gdp_growth'].std()

# Calculate 1929-1955 without 1941-1945
mask_without_war = (
    ((ussr_data['year'] >= 1929) & (ussr_data['year'] < 1941)) |
    ((ussr_data['year'] > 1945) & (ussr_data['year'] <= 1955))
)
avg_1929_1955_no_war = ussr_data.loc[mask_without_war, 'gdp_growth'].mean()
std_1929_1955_no_war = ussr_data.loc[mask_without_war, 'gdp_growth'].std()

# Add special periods to the list
# period_averages.append({
#     'period': '1929-1955\n(including WWII)',
#     'avg_growth': avg_1929_1955,
#     'std_growth': std_1929_1955,
#     'n_years': mask_1929_1955.sum(),
#     'start_year': 1929,
#     'end_year': 1955
# })
period_averages.append({
    'period': '1929-1955\n(excluding WWII)',
    'avg_growth': avg_1929_1955_no_war,
    'std_growth': std_1929_1955_no_war,
    'n_years': mask_without_war.sum(),
    'start_year': 1929,
    'end_year': 1955
})

# Create DataFrame for plotting
df_plot = pd.DataFrame(period_averages)

# Create the bar plot with error bars
plt.figure()
bars = plt.bar(df_plot['period'], df_plot['avg_growth'],
               yerr=df_plot['std_growth'], capsize=5)

# Customize the plot
plt.title('Average GDP Growth Rate by Period (%)', pad=20)
plt.xlabel('Period')
plt.ylabel('Average Growth Rate (%)')
plt.grid(True, axis='y', linestyle='--', alpha=0.7)
plt.xticks(rotation=45, ha='right')

# Add value labels on top of each bar
for bar in bars:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2., height,
             f'{height:.1f}%',
             ha='center', va='bottom')

plt.tight_layout()
plt.show()
```

```{python}
#| output: asis
from tabulate import tabulate

# Create a table with the statistics
stats_df = pd.DataFrame(period_averages)
stats_df = stats_df[['period', 'avg_growth', 'std_growth', 'n_years']]
stats_df.columns = ['Period', 'Average Growth (%)', 'Std Dev (%)', 'Years']

# Convert the DataFrame to a markdown table
markdown_table = tabulate(stats_df.round(2), headers='keys', tablefmt='pipe', showindex=False)
print(markdown_table)
```

## Conclusions

Our detailed analysis of the USSR's economic growth rates using the Maddison Project Database reveals several important findings:

1. **Growth Rate Discrepancy**: The claim of 13.8% annual growth during 1929-1955 (excluding WWII) is not supported by the data. Our analysis shows a much more modest rate of 4.3% per year.

2. **Context of Growth**: While 4.3% annual growth is still significant and represents substantial economic development, it's far from the extraordinary claims made in the "GROWTH CRYSTAL" book.

3. **Period Variations**: The analysis shows significant variations in growth rates across different periods:
   - The pre-revolutionary period showed moderate growth
   - The early Soviet period (1929-1941) showed higher growth rates due to industrialization
   - The post-war recovery period also showed significant growth
   - Later periods showed gradually declining growth rates

4. **Methodological Implications**: The substantial difference between our findings and the book's claims (13.8% vs 4.3%) raises serious questions about the methodology used in the book's calculations.

5. **Historical Perspective**: While Soviet economic growth was significant, especially during industrialization and post-war recovery, the actual rates were more in line with other rapidly developing economies of the 20th century, rather than being unprecedented as sometimes claimed.

This analysis underscores the importance of careful, data-driven examination of historical economic claims and the value of reliable datasets like the Maddison Project Database in conducting such verification.